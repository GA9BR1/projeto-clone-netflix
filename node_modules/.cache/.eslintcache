[{"C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\index.js":"1","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\App.js":"2","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\Tmdb.js":"3","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\components\\MovieRow.js":"4","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\components\\FeaturedMovie.js":"5","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\components\\Header.js":"6"},{"size":234,"mtime":1650038173072,"results":"7","hashOfConfig":"8"},{"size":2069,"mtime":1650065772702,"results":"9","hashOfConfig":"8"},{"size":2854,"mtime":1650053693789,"results":"10","hashOfConfig":"8"},{"size":1787,"mtime":1650061667746,"results":"11","hashOfConfig":"8"},{"size":1827,"mtime":1650063193599,"results":"12","hashOfConfig":"8"},{"size":762,"mtime":1650058109505,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rrhs5q",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\index.js",[],[],"C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\App.js",["37"],[],"import React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css'\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header'\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false)\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      // Pegando a lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list)\n      \n      // Pegando o Featured\n      let originals = list.filter(i=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1))\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n\n  }, []);\n\n\n\n  return(\n    <div className='page'>\n\n      <Header black={blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className='lists'>\n        {movieList.map((item, key)=>(\n          <MovieRow key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n      <footer>\n        Feito com <span role='img' aria-label='coração'>❤️</span> por Gustavo Alberto <br></br>\n        Direitos de imagem para Netflix <br></br>\n        Dados pegos do site themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 &&\n        <div className='loading'>\n          <img src='https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif' alt='Carregando'></img>\n        </div>\n      }\n    </div>\n  );\n}\n\n\n","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\Tmdb.js",["38"],[],"const API_KEY = '2bdeae335e9f36d190d6f11f0dc32a4c';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\n/*\r\n- Originais da Netflix\r\n- Recomendados, filmes mais em destaque (trending)\r\n- Em alta (top rated)\r\n- ação\r\n- comédia\r\n- terror\r\n- romance\r\n- documentários\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_networks=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'Science Fiction',\r\n                title: 'Ficção Ciêntifica',\r\n                items: await basicFetch(`/discover/movie?with_genres=878&language=pt-BR&pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n        \r\n        if(movieId) {\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        return info;\r\n\r\n    }\r\n}","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\components\\MovieRow.js",["39"],[],"import React, {useState} from 'react';\r\nimport './MovieRow.css'\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nexport default ({title, items}) => {\r\n    const [scrollX, setScrollX] = useState(0)\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if (x > 0) {\r\n            x = 0;\r\n        }\r\n        setScrollX(x)\r\n\r\n    }\r\n\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth /2);\r\n        let listW = items.results.length * 150;\r\n        if ((window.innerWidth - listW) > x) {\r\n            x = (window.innerWidth - listW) - 60\r\n\r\n        }\r\n        setScrollX(x)\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className='movieRow'>\r\n            <h2>{title}</h2>\r\n            <div className='movieRow--left' onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize:50}}/>\r\n            </div>\r\n            <div className='movieRow--right' onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize:50}}/>\r\n            </div>\r\n            <div className='movieRow--listarea'>\r\n                <div className='movieRow--list' style={{\r\n                    marginLeft: scrollX, width: items.results.length * 150\r\n                    }}>\r\n                    {items.results.length > 0 && items.results.map((item, key) =>(\r\n                        <div key={key} className='movieRow--item'>\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}></img>\r\n                        </div>\r\n                    ))}          \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\components\\FeaturedMovie.js",["40","41"],[],"import React from \"react\";\r\nimport './FeaturedMovie.css';\r\n\r\n\r\nexport default ({item}) => {\r\n    console.log(item)\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for (let i in item.genres) {\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview; \r\n    if(description.lenth > 200) {\r\n        description = description.substring(0, 200)+'...';\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temproada{item.number_of_seasons != 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{description}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className='featured--watchbutton'>► Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className='featured--mylistbutton'>+ Minha Lista</a>\r\n\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        \r\n    )\r\n} ","C:\\Users\\GustavoAlberto\\Desktop\\projeto-pratico\\projeto-clone-netflix\\src\\components\\Header.js",["42"],[],"import React from \"react\";\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\" alt=\"netflix\"></img>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://occ-0-4370-185.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABYTt3Ag0kwDhSmO3AT2sD4mfkoAO8fZsxfDgLKDU4zEKtQR6Ppk2Vfl6UsaI8I3hYjdnenK3F4IMju7VQqTQCbg1SIQt.png\" alt=\"netflix\"></img>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}",{"ruleId":"43","severity":1,"message":"44","line":8,"column":1,"nodeType":"45","endLine":78,"endColumn":2},{"ruleId":"43","severity":1,"message":"46","line":22,"column":1,"nodeType":"45","endLine":91,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":6,"column":1,"nodeType":"45","endLine":52,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":5,"column":1,"nodeType":"45","endLine":45,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":31,"column":118,"nodeType":"49","messageId":"50","endLine":31,"endColumn":120},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":19,"endColumn":2},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]